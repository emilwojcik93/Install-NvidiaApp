name: Release on Script Change

permissions:
  contents: write
  actions: read

on:
  push:
    paths:
      - Install-NvidiaApp.ps1 # Runs on changes in specific file
  workflow_dispatch: # Allows manual trigger

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set Version to Today's Date
        id: extract_version
        run: |
          $version = (Get-Date -Format "yy.MM.dd")
          echo "VERSION=$version" >> $env:GITHUB_ENV
        shell: pwsh

      - name: Upload Install-NvidiaApp.ps1
        uses: actions/upload-artifact@v3
        with:
          name: install-nvidiaapp-ps1
          path: ./Install-NvidiaApp.ps1

  release:
    needs: build
    runs-on: windows-latest

    steps:
      - name: Download Install-NvidiaApp.ps1
        uses: actions/download-artifact@v3
        with:
          name: install-nvidiaapp-ps1
          path: ./output

      - name: Set Version to Today's Date
        id: extract_version
        run: |
          $version = (Get-Date -Format "yy.MM.dd")
          echo "VERSION=$version" >> $env:GITHUB_ENV
        shell: pwsh

      - name: Dry Run of Install-NvidiaApp.ps1
        run: pwsh -Command "./output/Install-NvidiaApp.ps1 -DryRun -Force"

      - name: Create or Update GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          name: "Install-NvidiaApp.ps1 Release ${{ env.VERSION }}"
          body: |
            Automated release for Install-NvidiaApp.ps1
            To install the latest version, run:
            ```powershell
            &([ScriptBlock]::Create((irm https://github.com/emilwojcik93/Install-NvidiaApp/releases/latest/download/Install-NvidiaApp.ps1)))
            ```
          files: |
            ./output/Install-NvidiaApp.ps1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}